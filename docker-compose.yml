version: '3.5'

networks:
  frontend:
  backend:

# secrets:
#   database-env:
#     file: ./laravel-albums/.env

services:
# ### Nginx HTTP Server ##################################
  nginx:
    build:
      # unfortunately, ngix config has many files and we only want to change 3
      # so in this context, we extend `nginx:alpine` and chagnge the files
      context: ./docker/nginx
    volumes:
      - ./laravel-albums:/var/www:ro
      - ./data/log/nginx:/var/log/nginx
    depends_on:
      - php-fpm
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      # no SSL yet
      # - target: 443
      #   published: 443
      #   protocol: tcp
      #   mode: host
    networks:
      - frontend
# ### PHP FastCGI Process Manager Server ##################################
  php-fpm:
    build: ./docker/php-fpm
    user: $UID:$GID
    env_file: ./laravel-albums/.env
    volumes:
      - ./laravel-albums:/var/www
      - ./data/log/php-fpm:/var/log/php-fpm
    # depends_on:
    #   - postgres
    #   - node
    expose:
      - 9000
    networks:
      - frontend
      - backend
# ### PostgreSQL object-relational database Server ##################################
  postgres:
    image: postgres:alpine
    # secrets:
    #   - database-env
    env_file: './laravel-albums/.env'
    volumes:
      - ./data/postgresql:/var/lib/postgresql
    networks:
      - backend
    restart: on-failure
# ### Composer Dependency Manager for PHP ##################################
  composer:
    build: ./docker/composer
    user:  $UID:$GID
    tty: true
    volumes:
      - ./laravel-albums:/app
    networks:
      - backend
    entrypoint: composer
    command: install
    restart: on-failure
# ### Node.js JavaScript runtime and (NPM / Yarn) package manager ##################################
  node:
    image: node:10
    user:  $UID:$GID
    # node does not provide an workdir
    working_dir: /var/www
    tty: true
    volumes:
      - ./laravel-albums:/var/www
    entrypoint: npm
    command: start
    restart: on-failure

# pgadmin:
#   image: dpage/pgadmin4
#   ports:
#     - "5050:80"
#   volumes:
#     - ./laravel-albums/pgadmin-backup:/var/lib/pgadmin/storage/pgadmin4
#   env_file: ./laravel-albums/.env
#   depends_on:
#     - postgres
#   networks:
#     - frontend
#     - backend
